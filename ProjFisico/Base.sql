-----------------------------------------------------
-- Projeto Físico - Data Definition Language (DDL) --
-----------------------------------------------------

-- Jogador --
CREATE TABLE JOGADOR (
  ID NUMBER(5),
  USERNAME VARCHAR(20) NOT NULL,
  GENERO CHAR(1),
  EMAIL VARCHAR(50) NOT NULL,
  SENHA VARCHAR(20) NOT NULL,
  CONSTRAINT PK_JOGADOR PRIMARY KEY (ID),
  CONSTRAINT AK_JOGADOR_USER UNIQUE (USERNAME),
  CONSTRAINT AK_JOGADOR_EMAIL UNIQUE (EMAIL)
);

-- Amizade --
CREATE TABLE AMIZADE (
  IDJ1 NUMBER(5),
  IDJ2 NUMBER(5),
  DATA_DE_INICIO DATE,
  CONSTRAINT PK_AMIZADE PRIMARY KEY (IDJ1, IDJ2),
  CONSTRAINT CHK_AMIZADE CHECK (IDJ1 < IDJ2),
  CONSTRAINT FK_AMIZADE_IDJ1 FOREIGN KEY (IDJ1) REFERENCES JOGADOR (ID),
  CONSTRAINT FK_AMIZADE_IDJ2 FOREIGN KEY (IDJ2) REFERENCES JOGADOR (ID)
);

-- Conquista --
CREATE TABLE CONQUISTA (
  CODIGO NUMBER(5),  
  NOME VARCHAR(50) NOT NULL,
  DESCRICAO VARCHAR(200),
  CONSTRAINT PK_CONQUISTA PRIMARY KEY (CODIGO)
);

-- Desbloqueia --
CREATE TABLE DESBLOQUEIA (
  IDJ NUMBER(5),
  CODIGO_C NUMBER(5),  
  DATA_DESB DATE,
  CONSTRAINT PK_DESBLOQUEIA PRIMARY KEY (IDJ, CODIGO_C),
  CONSTRAINT FK_DESBLOQUEIA_IDJ FOREIGN KEY (IDJ) REFERENCES JOGADOR (ID) ON DELETE CASCADE,
  CONSTRAINT FK_DESBLOQUEIA_CODIGO_C FOREIGN KEY (CODIGO_C) REFERENCES CONQUISTA (CODIGO)
);

-- Sessão --
CREATE TABLE SESSAO (
  IDJ NUMBER(5),
  INICIO TIMESTAMP NOT NULL,
  DURACAO NUMBER(4, 2) NOT NULL,  
  TEMPO_ACUMULADO NUMBER(6, 2),  
  CONSTRAINT PK_SESSAO PRIMARY KEY (IDJ, INICIO),
  CONSTRAINT FK_SESSAO_IDJ FOREIGN KEY (IDJ) REFERENCES JOGADOR (ID) ON DELETE CASCADE
);

-- Servidor --
CREATE TABLE SERVIDOR (
  ID NUMBER(5),  
  NOME VARCHAR(50) NOT NULL,
  TIPO BOOLEAN NOT NULL,  
  SENHA VARCHAR(50),
  CONSTRAINT PK_SERVIDOR PRIMARY KEY (ID)
);

-- Punição --
CREATE TABLE PUNICAO (
  CODIGO NUMBER(5),  
  NOME VARCHAR(50) NOT NULL,
  DESCRICAO VARCHAR(200),
  DURACAO NUMBER(4),  
  CONSTRAINT PK_PUNICAO PRIMARY KEY (CODIGO)
);

-- Acesso --
CREATE TABLE ACESSO (
  IDJ NUMBER(5),
  IDS NUMBER(5),
  AUTORIDADE NUMBER(1) NOT NULL,  
  ULTIMO_ACESSO TIMESTAMP NOT NULL,
  CONSTRAINT PK_ACESSO PRIMARY KEY (IDJ, IDS),
  CONSTRAINT CHK_AUTORIDADE CHECK (AUTORIDADE BETWEEN 0 AND 2),
  CONSTRAINT FK_ACESSO_IDJ FOREIGN KEY (IDJ) REFERENCES JOGADOR (ID),
  CONSTRAINT FK_ACESSO_IDS FOREIGN KEY (IDS) REFERENCES SERVIDOR (ID)
);

-- Punido --
CREATE TABLE PUNIDO (
  IDJA NUMBER(5),
  IDSA NUMBER(5),
  CODIGO_P NUMBER(5), 
  DATA_P DATE,
  CONSTRAINT PK_PUNIDO PRIMARY KEY (IDJA, IDSA, CODIGO_P, DATA_P),
  CONSTRAINT FK_PUNIDO_IDJ_IDS FOREIGN KEY (IDJA, IDSA) REFERENCES ACESSO (IDJ, IDS),
  CONSTRAINT FK_PUNIDO_CODIGO_P FOREIGN KEY (CODIGO_P) REFERENCES PUNICAO (CODIGO)
);

-- Mapa --
CREATE TABLE MAPA (
  SEED CHAR(50), 
  CONSTRAINT PK_MAPA PRIMARY KEY (SEED)
);

-- Mundo --
CREATE TABLE MUNDO (
  IDS NUMBER(5),  
  INDICE NUMBER(5), 
  NOME VARCHAR(50) NOT NULL,
  SEED_M CHAR(50) NOT NULL,
  CONSTRAINT PK_MUNDO PRIMARY KEY (IDS, INDICE),
  CONSTRAINT FK_MUNDO_SEED_M FOREIGN KEY (SEED_M) REFERENCES MAPA (SEED)
);

-- Estrutura --
CREATE TABLE ESTRUTURA (
  SEED_M CHAR(50),
  CODIGO NUMBER(5),
  X NUMBER(6, 2) NOT NULL,
  Y NUMBER(6, 2) NOT NULL,
  Z NUMBER(6, 2) NOT NULL,
  CONSTRAINT PK_ESTRUTURA PRIMARY KEY (SEED_M, CODIGO),
  CONSTRAINT FK_ESTRUTURA_SEED_M FOREIGN KEY (SEED_M) REFERENCES MAPA (SEED)
);

-- Item --
CREATE TABLE ITEM (
  ID NUMBER(5),
  TIPO VARCHAR(50) NOT NULL,
  NOME VARCHAR(50) NOT NULL,
  DESCRICAO VARCHAR(200),
  CONSTRAINT PK_ITEM PRIMARY KEY (ID)
);

-- Possui --
CREATE TABLE POSSUI (
  IDJ NUMBER(5),
  IDI NUMBER(5),
  IDSM NUMBER(5),  
  INDICE_M NUMBER(5),  
  CONSTRAINT PK_POSSUI PRIMARY KEY (IDJ, IDI, IDSM, INDICE_M),
  CONSTRAINT FK_POSSUI_IDJ FOREIGN KEY (IDJ) REFERENCES JOGADOR (ID) ON DELETE CASCADE,
  CONSTRAINT FK_POSSUI_IDI FOREIGN KEY (IDI) REFERENCES ITEM (ID) ON DELETE CASCADE,
  CONSTRAINT FK_POSSUI_IDSM_INDICE_M FOREIGN KEY (IDSM, INDICE_M) REFERENCES MUNDO (IDS, INDICE) ON DELETE CASCADE
);

-- Compõe --
CREATE TABLE COMPOE (
  IDMP NUMBER(5),
  IDP NUMBER(5),
  QUANTIDADE NUMBER(2) DEFAULT 1,  
  CONSTRAINT PK_COMPOE PRIMARY KEY (IDMP, IDP),
  CONSTRAINT CHK_QUANTIDADE_POSITVA CHECK (QUANTIDADE > 0),
  CONSTRAINT FK_COMPOE_IDMP FOREIGN KEY (IDMP) REFERENCES ITEM (ID) ON DELETE CASCADE,
  CONSTRAINT FK_COMPOE_IDP FOREIGN KEY (IDP) REFERENCES ITEM (ID) ON DELETE CASCADE
);

-- Baú --
CREATE TABLE BAU (
  CODIGO NUMBER(5),  
  RARIDADE VARCHAR(10) NOT NULL,
  CAPACIDADE NUMBER(3) NOT NULL,
  CONSTRAINT PK_BAU PRIMARY KEY (CODIGO),
  CONSTRAINT CHK_CAPACIDADE_POSITIVA CHECK (CAPACIDADE > 0)
);

-- Guarda --
CREATE TABLE GUARDA (
  IDI NUMBER(5),
  CODIGO_B NUMBER(5), 
  PROBABILIDADE NUMBER(3, 2) NOT NULL,
  CONSTRAINT PK_GUARDA PRIMARY KEY (IDI, CODIGO_B),
  CONSTRAINT CHK_PROBABILIDADE CHECK (PROBABILIDADE >= 0 AND PROBABILIDADE <= 1),
  CONSTRAINT FK_GUARDA_IDI FOREIGN KEY (IDI) REFERENCES ITEM (ID) ON DELETE CASCADE,
  CONSTRAINT FK_GUARDA_CODIGO_B FOREIGN KEY (CODIGO_B) REFERENCES BAU (CODIGO) ON DELETE CASCADE
);

-- Vila --
CREATE TABLE VILA (
  SEED_ME CHAR(50),
  CODIGO_E NUMBER(5),
  QUANTIDADE_CASAS NUMBER(3) NOT NULL,
  CODIGO_B NUMBER,
  CONSTRAINT PK_VILA PRIMARY KEY (SEED_ME, CODIGO_E),
  CONSTRAINT CHK_QUANTIDADE_CASAS CHECK (QUANTIDADE_CASAS > 0),
  CONSTRAINT FK_VILA_SEED_ME FOREIGN KEY (SEED_ME, CODIGO_E) REFERENCES ESTRUTURA (SEED_M, CODIGO) ON DELETE CASCADE,
  CONSTRAINT FK_VILA_CODIGO_B FOREIGN KEY (CODIGO_B) REFERENCES BAU (CODIGO)
);

-- Aldeão --
CREATE TABLE ALDEAO (
  SEED_MEV CHAR(50),
  CODIGO_EV NUMBER(2),
  PROFISSAO VARCHAR(20) NOT NULL,
  CONSTRAINT PK_ALDEAO PRIMARY KEY (SEED_MEV, CODIGO_EV),
  CONSTRAINT FK_ALDEAO_SEED_MEV FOREIGN KEY (SEED_MEV, CODIGO_EV) REFERENCES VILA (SEED_ME, CODIGO_E) ON DELETE CASCADE
);

-- Fortaleza --
CREATE TABLE FORTALEZA (
  SEED_ME CHAR(50),
  CODIGO_E NUMBER(2),
  QUANTIDADE_DE_NIVEIS NUMBER(2) NOT NULL,
  CONSTRAINT PK_FORTALEZA PRIMARY KEY (SEED_ME, CODIGO_E),
  CONSTRAINT CHK_QUANTIDADE_DE_NIVEIS CHECK (QUANTIDADE_DE_NIVEIS > 0),
  CONSTRAINT FK_FORTALEZA_SEED_ME_CODIGO_E FOREIGN KEY (SEED_ME, CODIGO_E) REFERENCES ESTRUTURA (SEED_M, CODIGO) ON DELETE CASCADE
);

-- Criatura --
CREATE TABLE CRIATURA (
  ID NUMBER(3),
  NOME VARCHAR(30) NOT NULL,
  DESCRICAO VARCHAR(200),
  CONSTRAINT PK_CRIATURA PRIMARY KEY (ID)
);

-- Dropa --
CREATE TABLE DROPA (
  IDC NUMBER(3),
  IDI NUMBER(4),
  PROBABILIDADE NUMBER(3, 2) NOT NULL,
  CONSTRAINT PK_DROPA PRIMARY KEY (IDC, IDI),
  CONSTRAINT CHK_PROBABILIDADE CHECK (PROBABILIDADE >= 0 AND PROBABILIDADE <= 1)
  CONSTRAINT FK_DROPA_IDC FOREIGN KEY (IDC) REFERENCES CRIATURA (ID) ON DELETE CASCADE,
  CONSTRAINT FK_DROPA_IDI FOREIGN KEY (IDI) REFERENCES ITEM (ID) ON DELETE CASCADE
);

-- Animal --
CREATE TABLE ANIMAL (
  IDC NUMBER(5), 
  DOMESTICAVEL BOOLEAN NOT NULL,
  CONSTRAINT PK_ANIMAL PRIMARY KEY (IDC),
  CONSTRAINT FK_ANIMAL_IDC FOREIGN KEY (IDC) REFERENCES CRIATURA(ID) ON DELETE CASCADE
);

-- Servo --
CREATE TABLE SERVO (
  IDC NUMBER(5),
  ATRIBUTO VARCHAR(15),
  CONSTRAINT PK_SERVO PRIMARY KEY (IDC),
  CONSTRAINT FK_SERVO_IDC FOREIGN KEY (IDC) REFERENCES CRIATURA(ID) ON DELETE CASCADE
);

-- Protege --
CREATE TABLE PROTEGE (
  IDCS NUMBER(5),
  SEED_MEF CHAR(50),
  CODIGO_EF NUMBER(5),
  CONSTRAINT PK_PROTEGE PRIMARY KEY (IDCS, SEED_MEF, CODIGO_EF),
  CONsTRAINT FK_PROTEGE_IDCS FOREIGN KEY (IDCS) REFERENCES SERVO (ID) ON DELETE CASCADE,
  CONSTRAINT FK_PROTEGE_SEEDMEF FOREIGN KEY (SEED_MEF, CODIGO_EF) REFERENCES FORTALEZA (SEED_ME, CODIGO_E) ON DELETE CASCADE
);

-- Chefe --
CREATE TABLE CHEFE (
  IDC NUMBER(5),
  SEED_MEF CHAR(50),
  CODIGO_EF NUMBER(5),
  CONSTRAINT PK_CHEFE PRIMARY KEY (IDC),
  CONSTRAINT AK_CHEFE UNIQUE (SEED_MEF, CODIGO_EF),
  CONSTRAINT FK_CHEFE_IDC FOREIGN KEY (IDC) REFERENCES CRIATURA (ID) ON DELETE CASCADE,
  CONSTRAINT FK_CHEFE_SEEDMEF FOREIGN KEY (SEED_MEF, CODIGO_EF) REFERENCES FORTALEZA (SEED_ME, CODIGO_E)
);

-- Atributo --
CREATE TABLE ATRIBUTO (
  IDCC NUMBER(5),
  ATRIBUTO VARCHAR(15),
  CONSTRAINT PK_ATRIBUTO PRIMARY KEY (IDCC),
  CONSTRAINT FK_ATRIBUTO_IDCC FOREIGN KEY (IDCC) REFERENCES CHEFE (IDC) ON DELETE CASCADE
);
